 rules_version = '2';
 service cloud.firestore {
     match /databases/{database}/documents {
         match /users/{userId} {
             allow create: if request.auth.uid == userId && request.auth.token.firebase.sign_in_provider == 'twitter.com' &&
                request.resource.data.keys().hasOnly(["minuteWage", "isAvailable"]);

             allow update: if request.auth.uid == userId && request.auth.token.firebase.sign_in_provider == 'twitter.com' &&
                request.resource.data.diff(resource.data).affectedKeys().hasOnly(
                        ["minuteWage", "isAvailable", "photoURL", "displayName", "coverPhotoUrl"]);

             allow read: if true;
         }
         match /usersPrivateInfo/{userId} {
             allow create: if request.auth.uid == userId && request.resource.data.keys() == ["phoneNumber"];
             allow update: if request.auth.uid == userId &&
             request.resource.data.diff(resource.data).affectedKeys().hasOnly(["phoneNumber"]);

             allow read: if request.auth.uid == userId;
         }
         match /twilioTokens/{documentId} {
             allow read: if request.auth.uid == resource.data.uid;
         }
         match /videoCalls/{videoCallId} {
             function denyTheCall() {
                 return request.resource.data.diff(resource.data).affectedKeys().hasOnly(["status"]) &&
                     request.resource.data.status == 'denied' && resource.data.status == 'pending';
             }

             function clientRating() {
                return request.resource.data.diff(resource.data).affectedKeys().hasOnly(["clientRating"]) &&
                              request.resource.data.clientRating >= 1 && request.resource.data.clientRating <= 5;
             }

             function creatorTipRequest() {
                 return request.resource.data.diff(resource.data).affectedKeys().hasOnly(["tipRequest"]);
             }

             allow read: if request.auth.uid == resource.data.clientUid || request.auth.uid == resource.data.addresseeUid;
             allow update: if (request.auth.uid == resource.data.addresseeUid && denyTheCall()) ||
                (request.auth.uid == resource.data.clientUid && clientRating()) ||
                 (request.auth.uid == resource.data.addresseeUid && creatorTipRequest());

             match /tips/{tipId} {
                allow read: if request.auth.uid == get(/databases/$(database)/documents/videoCalls/$(videoCallId)).data.addresseeUid;
            }
         }
         match /registeredBy/{uid} {
             allow create: if uid == request.auth.uid && !exists(/databases/$(database)/documents/usersPrivateInfo/$(uid));
         }
     }
 }

 service firebase.storage {
   match /b/{bucket}/o {
     match /profilePhotos/{addresseeUid} {
       allow write: if addresseeUid == request.auth.uid;
       allow read: if true;
     }
    match /coverPhotos/{addresseeUid} {
        allow write: if addresseeUid == request.auth.uid;
        allow read: if true;
    }
   }
 }